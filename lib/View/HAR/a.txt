<!DOCTYPE html>
<html>

<head>
    <title>Products</title>
    <meta name="csrf-token" content="{{ csrf_token() }}">
    <style>
        .category-slider {
            display: flex;
            overflow-x: auto;
            white-space: nowrap;
            margin-bottom: 20px;
        }

        .category-slider div {
            display: inline-block;
            padding: 10px 20px;
            margin: 0 10px;
            background-color: #f0f0f0;
            border-radius: 5px;
            cursor: pointer;
        }

        .category-slider div.active {
            background-color: #007bff;
            color: white;
        }

        .product {
            border: 1px solid #ddd;
            padding: 15px;
            margin: 15px;
            border-radius: 5px;
            max-width: 300px;
            display: inline-block;
            vertical-align: top;
        }

        .product img {
            max-width: 100%;
            height: auto;
        }

        .product h2 {
            font-size: 1.5em;
            margin: 0;
        }

        .product p {
            margin: 5px 0;
        }

        .cart {
            border: 1px solid #ddd;
            padding: 15px;
            margin: 15px;
            border-radius: 5px;
            max-width: 300px;
            display: inline-block;
            vertical-align: top;
        }

        .cart-item {
            display: flex;
            justify-content: space-between;
            margin-bottom: 10px;
        }

        .cart-item button {
            margin-left: 5px;
        }

        .modal {
            display: none;
            position: fixed;
            z-index: 1;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0, 0, 0, 0.4);
        }

        .modal-content {
            background-color: white;
            margin: 15% auto;
            padding: 20px;
            border: 1px solid #888;
            width: 80%;
            max-width: 500px;
        }

        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

        .close:hover,
        .close:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }
    </style>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function() {
            let categories = document.querySelectorAll('.category-slider div');
            categories.forEach(category => {
                category.addEventListener('click', function() {
                    let selectedCategory = this.dataset.categoryId;
                    document.querySelectorAll('.category-slider div').forEach(c => c.classList
                        .remove('active'));
                    this.classList.add('active');

                    document.querySelectorAll('.product').forEach(product => {
                        if (selectedCategory == "all" || product.dataset.categoryId ==
                            selectedCategory) {
                            product.style.display = 'inline-block';
                        } else {
                            product.style.display = 'none';
                        }
                    });
                });
            });

            let modal = document.getElementById("myModal");
            let span = document.getElementsByClassName("close")[0];

            span.onclick = function() {
                modal.style.display = "none";
            }

            window.onclick = function(event) {
                if (event.target == modal) {
                    modal.style.display = "none";
                }
            }

            let addToCartButtons = document.querySelectorAll('.add-to-cart');
            addToCartButtons.forEach(button => {
                button.addEventListener('click', function() {
                    let productId = this.dataset.productId;
                    let productName = this.dataset.productName;
                    let productPrice = this.dataset.productPrice;
                    let variationId = this.dataset.variationId; // Default to 0 if not provided

                    document.getElementById('modal-product-name').innerText = productName;
                    document.getElementById('modal-product-price').innerText = productPrice;
                    document.getElementById('modal-product-id').value = productId;
                    document.getElementById('modal-quantity').value = 1;
                    document.getElementById('modal-subtotal').innerText = (parseFloat(productPrice))
                        .toFixed(2);
                    document.getElementById('modal-note').value = '';

                    // Store variation_id in modal for use when adding to cart
                    document.getElementById('modal-variation-id').value = variationId;

                    modal.style.display = "block";
                });
            });

            document.getElementById('modal-quantity').addEventListener('input', function() {
                let quantity = this.value;
                let price = document.getElementById('modal-product-price').innerText;
                let subtotal = quantity * price;
                document.getElementById('modal-subtotal').innerText = subtotal.toFixed(2);
            });

            document.getElementById('add-to-cart-button').addEventListener('click', function() {
                let productId = document.getElementById('modal-product-id').value;
                let productName = document.getElementById('modal-product-name').innerText;
                let quantity = document.getElementById('modal-quantity').value;
                let price = document.getElementById('modal-product-price').innerText;
                let subtotal = (quantity * price).toFixed(2);
                let note = document.getElementById('modal-note').value;
                let variationId = document.getElementById('modal-variation-id').value;

                let cart = JSON.parse(sessionStorage.getItem('cart')) || [];
                let existingItemIndex = cart.findIndex(item => item.id == productId && item.note == note);
                if (existingItemIndex !== -1) {
                    cart[existingItemIndex].quantity = parseInt(cart[existingItemIndex].quantity) +
                        parseInt(quantity);
                    cart[existingItemIndex].subtotal = (parseFloat(cart[existingItemIndex].subtotal) +
                        parseFloat(subtotal)).toFixed(2);
                } else {
                    cart.push({
                        id: productId,
                        name: productName,
                        price: price,
                        quantity: quantity,
                        subtotal: subtotal,
                        note: note,
                        variation_id: variationId
                    });
                }
                sessionStorage.setItem('cart', JSON.stringify(cart));
                updateCart();

                modal.style.display = "none";
                alert('Product added to cart');
            });

            function updateCart() {
                let cart = JSON.parse(sessionStorage.getItem('cart')) || [];
                let cartContainer = document.getElementById('cart-items');
                cartContainer.innerHTML = '';

                cart.forEach(item => {
                    let cartItem = document.createElement('div');
                    cartItem.className = 'cart-item';
                    cartItem.innerHTML = `
                        <span>${item.name} ($${item.price})</span>
                        <span>
                            <button class="decrease-quantity" data-product-id="${item.id}">-</button>
                            <input type="number" class="cart-quantity" data-product-id="${item.id}" value="${item.quantity}" min="1">
                            <button class="increase-quantity" data-product-id="${item.id}">+</button>
                            $${item.subtotal}
                            <button class="remove-item" data-product-id="${item.id}">Remove</button>
                        </span>
                        <p>Note: ${item.note}</p>
                    `;
                    cartContainer.appendChild(cartItem);
                });

                document.querySelectorAll('.increase-quantity').forEach(button => {
                    button.addEventListener('click', function() {
                        let productId = this.dataset.productId;
                        changeQuantity(productId, 1);
                    });
                });

                document.querySelectorAll('.decrease-quantity').forEach(button => {
                    button.addEventListener('click', function() {
                        let productId = this.dataset.productId;
                        changeQuantity(productId, -1);
                    });
                });

                document.querySelectorAll('.remove-item').forEach(button => {
                    button.addEventListener('click', function() {
                        let productId = this.dataset.productId;
                        removeItem(productId);
                    });
                });

                document.querySelectorAll('.cart-quantity').forEach(input => {
                    input.addEventListener('input', function() {
                        let productId = this.dataset.productId;
                        let quantity = this.value;
                        updateQuantity(productId, quantity);
                    });
                });
            }

            function changeQuantity(productId, delta) {
                let cart = JSON.parse(sessionStorage.getItem('cart')) || [];
                let itemIndex = cart.findIndex(item => item.id == productId);
                if (itemIndex !== -1) {
                    cart[itemIndex].quantity = parseInt(cart[itemIndex].quantity) + delta;
                    if (cart[itemIndex].quantity < 1) {
                        cart[itemIndex].quantity = 1;
                    }
                    cart[itemIndex].subtotal = (parseFloat(cart[itemIndex].price) * cart[itemIndex].quantity)
                        .toFixed(2);
                    sessionStorage.setItem('cart', JSON.stringify(cart));
                    updateCart();
                }
            }

            function updateQuantity(productId, quantity) {
                let cart = JSON.parse(sessionStorage.getItem('cart')) || [];
                let itemIndex = cart.findIndex(item => item.id == productId);
                if (itemIndex !== -1) {
                    cart[itemIndex].quantity = parseInt(quantity);
                    if (cart[itemIndex].quantity < 1) {
                        cart[itemIndex].quantity = 1;
                    }
                    cart[itemIndex].subtotal = (parseFloat(cart[itemIndex].price) * cart[itemIndex].quantity)
                        .toFixed(2);
                    sessionStorage.setItem('cart', JSON.stringify(cart));
                    updateCart();
                }
            }

            function removeItem(productId) {
                let cart = JSON.parse(sessionStorage.getItem('cart')) || [];
                cart = cart.filter(item => item.id != productId);
                sessionStorage.setItem('cart', JSON.stringify(cart));
                updateCart();
            }

            // Place Order & Empty Cart button click handler
            $('#place-order').click(function() {
                let cartItems = JSON.parse(sessionStorage.getItem('cart')) || [];
                let products = {};
                cartItems.forEach((item, index) => {
                    let productIndex = index + 1; // Increment index to start from 1
                    products[productIndex] = {
                        product_type: 'single',
                        unit_price: item.price,
                        line_discount_type: 'fixed',
                        line_discount_amount: '0.00',
                        item_tax: '0.00',
                        tax_id: '',
                        sell_line_note: item.note,
                        product_id: item.id,
                        variation_id: item.variation_id,
                        enable_stock: 0,
                        quantity: item.quantity,
                        product_unit_id: 4,
                        sub_unit_id: 4,
                        base_unit_multiplier: 1,
                        unit_price_inc_tax: item.price
                    };
                });

                console.log(products);

                let payload = {
                    location_id: 1,
                    sub_type: '',
                    zone: 'on',
                    contact_id: 1,
                    search_product: '',
                    pay_term_number: '',
                    pay_term_type: '',
                    custom_field_4: 0,
                    transaction_date: '21-06-2024 09:17 PM',
                    price_group: 0,
                    types_of_service_price_group: '',
                    types_of_service_id: 3,
                    res_table_id: 113,
                    res_waiter_id: 13,
                    sell_price_tax: 'includes',
                    products: products,
                    discount_type: 'percentage',
                    discount_amount: '0.00',
                    rp_redeemed: 0,
                    rp_redeemed_amount: 0,
                    tax_rate_id: 1,
                    tax_calculation_amount: '13.00',
                    shipping_details: '',
                    shipping_address: '',
                    shipping_status: '',
                    delivered_to: '',
                    delivery_person: '',
                    shipping_charges: '0.00',
                    advance_balance: '0.0000',
                    payment: {
                        0: {
                            amount: '11,170.05',
                            method: 'cash',
                            cheque_number: '',
                            bank_account_number: '',
                            transaction_no_1: '',
                            transaction_no_2: '',
                            transaction_no_3: '',
                            transaction_no_4: '',
                            transaction_no_5: '',
                            transaction_no_6: '',
                            transaction_no_7: '',
                            note: ''
                        },
                        change_return: {
                            method: 'cash',
                            cheque_number: '',
                            bank_account_number: '',
                            transaction_no_1: '',
                            transaction_no_2: '',
                            transaction_no_3: '',
                            transaction_no_4: '',
                            transaction_no_5: '',
                            transaction_no_6: '',
                            transaction_no_7: ''
                        }
                    },
                    sale_note: '',
                    staff_note: '',
                    change_return: '0.00',
                    additional_notes: '',
                    is_suspend: 0,
                    recur_interval: '',
                    recur_interval_type: 'days',
                    recur_repetitions: '',
                    subscription_repeat_on: '',
                    is_enabled_stock: '',
                    is_credit_sale: 0,
                    final_total: '11,170.05',
                    discount_type_modal: 'percentage',
                    discount_amount_modal: '0.00',
                    order_tax_modal: 1,
                    shipping_details_modal: '',
                    shipping_address_modal: '',
                    shipping_charges_modal: 0,
                    shipping_status_modal: '',
                    delivered_to_modal: '',
                    delivery_person_modal: '',
                    status: 'draft'
                };

                // Fetch CSRF token from meta tag
                var csrfToken = $('meta[name="csrf-token"]').attr('content');
                console.log(csrfToken);

                $.ajax({
                    url: 'http://127.0.0.1:8000/pos', // Replace with your actual endpoint
                    type: 'POST',
                    data: payload,
                    headers: {
                        'X-CSRF-TOKEN': csrfToken // Include CSRF token in headers
                    },
                    success: function(response) {
                        console.log('Order placed successfully:', response);
                        sessionStorage.removeItem('cart'); // Clear cart after successful order
                        alert('Order placed successfully!');
                        window.location.href="/OrderTableDetail";
                        // location.reload(); // Reload page or redirect as needed
                    },
                    error: function(xhr, status, error) {
                        console.error('Error placing order:', error);
                        alert('Error placing order. Please try again.');
                    }
                });
            });


            document.getElementById('empty-cart').addEventListener('click', function() {
                sessionStorage.removeItem('cart'); // Clear cart on empty cart button click
                updateCart();
            });

            updateCart(); // Initial cart update on page load
        });
    </script>
</head>

<body>

    <h1>Products</h1>

    <div class="category-slider">
        <div data-category-id="all" class="active">All</div>
        @foreach ($categories as $category)
            <div data-category-id="{{ $category['id'] }}">{{ $category['name'] }}</div>
        @endforeach
    </div>

    @foreach ($products as $product)
        {{-- <script>
            console.log(@json($product));
        </script> --}}
        <div class="product" data-category-id="{{ $product['category_id'] }}">
            <h2>{{ $product['name'] }}</h2>
            <p>${{ $product['default_sell_price'] }}</p>
            <button class="add-to-cart" data-product-id="{{ $product['product_id'] }}"
                data-product-name="{{ $product['name'] }}" data-product-price="{{ $product['default_sell_price'] }}"
                data-variation-id="{{ $product['variation_id'] ?? 0 }}">
                Add to Cart
            </button>
        </div>
    @endforeach

    <!-- Modal -->
    <div class="modal fade" id="redirectModal" tabindex="-1" aria-labelledby="redirectModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="redirectModalLabel">Redirecting to Your Order</h5>
                </div>
                <div class="modal-body">
                    <p id="countdown">3</p>
                </div>
            </div>
        </div>
    </div>

     {{-- <pre>
         {{$unpaid_order}}
    </pre> --}}
    {{-- <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script> --}}

    @if ($unpaid_order!=null)
        <!-- Script to show modal and redirect -->
        <script>
            $(document).ready(function() {
                // $('#redirectModal').modal('show');

                var count = 0;
                var countdown = setInterval(function() {
                    if (count === 0) {
                        clearInterval(countdown);
                        $('#countdown').text('GO!');
                        setTimeout(function() {
                            // Redirect to the order page
                            window.location.href = "{{ route('order.show', ['id' => $unpaid_order->id]) }}";
                        }, 1000); // Delay before redirecting
                    } else {
                        $('#countdown').text(count);
                        count--;
                    }
                }, 1000);
            });
        </script>
    @endif

    <!-- The Modal -->
    <div id="myModal" class="modal">
        <!-- Modal content -->
        <div class="modal-content">
            <span class="close">&times;</span>
            <h2>Add to Cart</h2>
            <p>Product: <span id="modal-product-name"></span></p>
            <p>Price: $<span id="modal-product-price"></span></p>
            <form>
                <input type="hidden" id="modal-product-id">
                <input type="hidden" id="modal-variation-id">
                <label for="modal-quantity">Quantity:</label>
                <input type="number" id="modal-quantity" value="1" min="1">
                <p>Subtotal: $<span id="modal-subtotal"></span></p>
                <label for="modal-note">Special Instructions:</label>
                <textarea id="modal-note" rows="3"></textarea>
                <button type="button" id="add-to-cart-button">Add to Cart</button>
            </form>
        </div>
    </div>

    <div class="cart">
        <h2>Cart</h2>
        <div id="cart-items"></div>
        <button id="empty-cart">Empty Cart</button>
        <button id="place-order">Place Order</button>
    </div>

</body>

</html>


{{-- 
product_type: 'single',
                        unit_price: item.price,
                        line_discount_type: 'fixed',
                        line_discount_amount: '0.00',
                        item_tax: '0.00',
                        tax_id: '',
                        sell_line_note: item.note,
                        product_id: item.id,
                        variation_id: 0,
                        enable_stock: 0,
                        quantity: item.quantity,
                        product_unit_id: 4,
                        sub_unit_id: 4,
                        base_unit_multiplier: 1,
                        unit_price_inc_tax: item.price --}}
